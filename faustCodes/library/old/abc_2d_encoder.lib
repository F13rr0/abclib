//--------------------------------------------------------------------------------------//
//----------------------------------------abclib----------------------------------------//
//
//-------------------------FAUST CODE AND UTILITIES FOR MIXED MUSIC---------------------//
//
//-----------------------BY ALAIN BONARDI & PAUL GOUTMANN - 2019-2021 ------------------//
//---------------------CICM - MUSIDANSE LABORATORY - PARIS 8 UNIVERSITY-----------------//
//--------------------------------------------------------------------------------------//
//
declare author "Alain Bonardi & Paul Goutmann";
declare licence "LGPLv3";
declare name "abc_2d_encoder";
//
//--------------------------------------------------------------------------------------//
//AMBISONIC ENCODERS
//--------------------------------------------------------------------------------------//
//
import("stdfaust.lib");
//
//--------------------------------------------------------------------------------------//
//CONTROL PARAMETERS
//--------------------------------------------------------------------------------------//
//
rotfreq = hslider("v:encoder/speed [unit:s-1]", 0, -100, 100, 0.001);
rotphase = hslider("v:encoder/angle [unit:deg]", 0, -360, 360, 0.01) / 360;
returntime = hslider("v:encoder/returntime [unit:msec]", 20, 0, 1000, 1) * 0.001;
//
//--------------------------------------------------------------------------------------//
//DEFINITION OF THE ENCODER AT AMBISONIC ORDER AO
//--------------------------------------------------------------------------------------//
abc_2d_encoder(ao) = freqPhaseEncoder(rotfreq, rotphase, returntime) with {
	freqPhaseEncoder(f, p, dt) = (_, library("abc_encodingrotation.lib").abc_rotationOrStaticAngle(f, p, dt)) : myEncoder;
	myEncoder(sig, angle) = ho.encoder(ao, sig, angle);//at ambisonic order ao.   
};
//